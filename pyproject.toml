[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "learned_knowledge_mcp"
version = "0.1.0"
description = "Model Context Protocol server for storing and retrieving error information"
authors = ["Agentience <info@agentience.com>"]
readme = "README.md"
packages = [
    {include = "learned_knowledge_mcp", from = "src"},
    {include = "examples", from = "src"}
]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
fastapi = "^0.110.0"
uvicorn = "^0.27.0"
pydantic = "^2.6.0"
chromadb = "^0.4.22"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
numpy = "<2.0.0"
mcp = {extras = ["cli"], version = "^1.3.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
mypy = "^1.8.0"
ruff = "^0.2.0"
black = "^24.2.0"
httpx = "^0.27.0"

[tool.poetry.scripts]
mcp-api = "learned_knowledge_mcp.app:main"
mcp-server = "learned_knowledge_mcp.mcp_app:main"
mcp-client = "examples.api_client:main"
docker-start = "learned_knowledge_mcp._scripts:docker_start"
docker-stop = "learned_knowledge_mcp._scripts:docker_stop"
docker-redeploy = "learned_knowledge_mcp._scripts:docker_redeploy"
docker-logs = "learned_knowledge_mcp._scripts:docker_logs"

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"